filter {
#  if ") p00" in [message] {
#      drop { }
#  }
#  else if "RUSAGE" in [message] {
#    drop { }
#  }
#  else if "extra modules loaded" in [message] {
#    drop { }
#  }
#  else if "rundown" in [message] {
#    drop { } 
#  } 
#  else if "fail2ban@mail.glencoeschools.org" in [message] {
#    drop { }
#  }
  if "amavis" in [tags] {
    mutate { add_tag => [ "44-filter-zimbraAMAVIS"] }
    grok {
      patterns_dir => [ "/etc/logstash/patterns" ]
      match => [ "message", "%{AMAVIS_FILECHECK}" ]
      add_tag => [ "quarantine_file" ]
      tag_on_failure => [ ]
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns" ]
      match => [ "message", "%{AMAVIS_CHECKING}" ]
      add_tag => [ "checking" ]
      tag_on_failure => [ ]
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns" ]
      match => [ "message", "%{AMAVIS_DKIM}" ]
      add_tag => [ "to_dkim" ]
      tag_on_failure => [ ]
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns" ]
      match => [ "message", "%{AMAVISRESULT}" ]
      add_tag => [ "result" ]
      tag_on_failure => [ ]
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns" ]
      match => [ "message", "%{SYSLOGTIMESTAMP} %{HOSTNAME} %{PROG}\[%{NUMBER}\]: \(%{PROG}\) %{PROG}, <%{NOTSPACE:from}> -> <%{NOTSPACE:to}>, %{WORD}, %{WORD}=%{BASE10NUM:msg_spamscore:float} %{WORD}=%{BASE10NUM} %{WORD}=%{BASE10NUM} %{WORD}=\[%{GREEDYDATA:rules}\]%{GREEDYDATA}" ]
      add_tag => [ "scored" ]
      tag_on_failure => [ ]
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns" ]
      match => [ "message", "%{SYSLOGTIMESTAMP} %{HOSTNAME} %{NOTSPACE}: \(%{NOTSPACE}\) dkim: %{WORD:dkim_status}" ]
      add_tag => [ "dkim_status" ]
      tag_on_failure => [ ]
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns" ]
      match => [ "message", "%{SYSLOGTIMESTAMP} %{HOSTNAME} %{NOTSPACE}: %{NOTSPACE} TIMING-SA \[%{WORD} %{INT:total_processingtime:int} ms, cpu %{INT:total_cputime:int} ms\] - parse: %{GREEDYDATA:rules_processed}" ]
      match => [ "message", "%{SYSLOGTIMESTAMP} %{HOSTNAME} %{NOTSPACE}: %{NOTSPACE} size: %{INT}, TIMING \[%{WORD} %{INT:total_processingtime:int} ms, cpu %{INT:total_cputime:int} ms, AM-cpu %{INT:total_amcpu:int} ms, SA-cpu %{INT:total_sacpu:int}%{GREEDYDATA:rules_processed}" ]
      match => [ "message", "%{SYSLOGTIMESTAMP} %{HOSTNAME} %{NOTSPACE}: %{NOTSPACE} size: %{INT}, TIMING \[%{WORD} %{INT:total_processingtime:int} ms, cpu %{INT:total_cputime:int} ms\] - %{GREEDYDATA:rules_processed}" ]
      add_tag => [ "sa_timing" ]
      tag_on_failure => [ ]
    }
    if [to] {
      mutate { 
    	  gsub => [ "to", "[<>]", "" ]
    	  split => [ "to", "," ]
      }
    }
    if [spam_score] {
      mutate { convert => { "spam_score" => "float" } }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns" ]
      match => [ "to", "%{TOEMAILADDRESS}" ]
      tag_on_failure => [ ]
    }      
  }
}
